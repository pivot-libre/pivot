{
    "swagger": "2.0",
    "info": {
        "title": "Pivot API",
        "version": "0.1.0"
    },
    "basePath": "/api",
    "paths": {
        "/election/{electionId}/candidate": {
            "get": {
                "tags": [
                    "Candidates"
                ],
                "summary": "View candidates for an election",
                "operationId": "candidateIndex",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Candidate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Candidates"
                ],
                "summary": "Add a candidate",
                "operationId": "createCandidate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "description": "Candidate to add",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCandidate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Candidate"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/election/{electionId}/candidate/{candidateId}": {
            "get": {
                "tags": [
                    "Candidates"
                ],
                "summary": "Get information about a candidate",
                "operationId": "getCandidateById",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "candidateId",
                        "in": "path",
                        "description": "Candidate to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Candidate"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Candidates"
                ],
                "summary": "Delete a candidate",
                "operationId": "deleteCandidate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "candidateId",
                        "in": "path",
                        "description": "Candidate ID to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/election": {
            "get": {
                "tags": [
                    "Election"
                ],
                "summary": "View all elections",
                "operationId": "electionIndex",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Election"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/election/{electionId}": {
            "get": {
                "tags": [
                    "Election"
                ],
                "summary": "View information about an election",
                "operationId": "getElectionById",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ElectionWithCreator"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/election/{electionId}/elector": {
            "get": {
                "tags": [
                    "Electors"
                ],
                "summary": "View the electorate for an election",
                "operationId": "electorIndex",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/election/{electionId}/elector/{electorId}": {
            "get": {
                "tags": [
                    "Electors"
                ],
                "summary": "Get information about an elector",
                "operationId": "getElectorById",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "electorId",
                        "in": "path",
                        "description": "Elector to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/election/{electionId}/invite": {
            "get": {
                "tags": [
                    "Invites"
                ],
                "summary": "View pending invites",
                "operationId": "inviteIndex",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InviteWithElection"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Invites"
                ],
                "summary": "Send an invite",
                "operationId": "createInvite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "payload",
                        "in": "body",
                        "description": "Email to invite",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/election/{electionId}/invite/{code}": {
            "get": {
                "tags": [
                    "Invites"
                ],
                "summary": "Get information about an invite",
                "operationId": "getInviteByCode",
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election to get",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Invite to get",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invites"
                ],
                "summary": "Delete an invite",
                "operationId": "deleteInvite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "electionId",
                        "in": "path",
                        "description": "Election ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Invite Code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/invite/accept": {
            "post": {
                "tags": [
                    "Invites"
                ],
                "summary": "Accept an invite",
                "operationId": "acceptInvite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "payload",
                        "in": "body",
                        "description": "Code to accept an invite",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
        "Candidate": {
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "election_id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "example": "Funds for road construction"
                },
                "created_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                }
            },
            "type": "object",
            "xml": {
                "name": "Candidate"
            }
        },
        "Code": {
            "properties": {
                "code": {
                    "type": "string",
                    "example": "12345678"
                }
            },
            "type": "object",
            "xml": {
                "name": "Code"
            }
        },
        "CreateCandidate": {
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Highland Avenue"
                }
            },
            "type": "object",
            "xml": {
                "name": "CreateCandidate"
            }
        },
        "Election": {
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "creator_id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "example": "Funds for road construction"
                },
                "created_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                }
            },
            "type": "object",
            "xml": {
                "name": "Election"
            }
        },
        "ElectionWithCreator": {
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "creator_id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "example": "Funds for road construction"
                },
                "created_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "creator": {
                    "$ref": "#/definitions/User"
                }
            },
            "type": "object",
            "xml": {
                "name": "ElectionWithCreator"
            }
        },
        "Email": {
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                }
            },
            "type": "object",
            "xml": {
                "name": "Email"
            }
        },
        "Invite": {
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "code": {
                    "type": "string",
                    "example": "12345678"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "accepted_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "created_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                }
            },
            "type": "object",
            "xml": {
                "name": "Invite"
            }
        },
        "InviteWithElection": {
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "code": {
                    "type": "string",
                    "example": "12345678"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "accepted_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "created_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "pivot": {
                    "$ref": "#/definitions/PivotElection"
                }
            },
            "type": "object",
            "xml": {
                "name": "InviteWithElection"
            }
        },
        "PivotElection": {
            "properties": {
                "election_id": {
                    "type": "string",
                    "example": "123"
                },
                "invite_id": {
                    "type": "string",
                    "example": "123"
                }
            },
            "type": "object",
            "xml": {
                "name": "PivotElection"
            }
        },
        "User": {
            "properties": {
                "id": {
                    "type": "string",
                    "example": "123"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "created_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2017-01-01 11:00:00"
                }
            },
            "type": "object",
            "xml": {
                "name": "User"
            }
        }
    }
}